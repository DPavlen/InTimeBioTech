version: '3.8'

services:

  intime-biotech-backend-nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./nginx/configs:/etc/nginx/conf.d:rw
      - static:/app/static:ro
    depends_on:
      - intime-biotech-backend-api
    networks:
      - intime-biotech-backend-network

  intime-biotech-backend-db:
    image: postgres:14
    container_name: intime-biotech-backend-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - intime-biotech-backend-network

  redis:
    container_name: cache
    image: redis:7.0.8-alpine
    ports:
      - 6379:6379
    networks:
      - intime-biotech-backend-network

  intime-biotech-backend-api:
    container_name: intime-biotech-backend-api
    build:
      context: ../
      dockerfile: docker/backend/Dockerfile
      target: main
    volumes:
      - ../backend:/app
      - static:/app/static/
    networks:
      - intime-biotech-backend-network
    env_file:
      - .env
    depends_on:
      - intime-biotech-backend-db

  intime-biotech-backend-flower:
    image: mher/flower:0.9.7
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    networks:
      - intime-biotech-backend-network
    depends_on:
      - redis
      - intime-biotech-backend-api

networks:
  intime-biotech-backend-network:
    name: intime-biotech-backend-network
    external: true

volumes:
  db_data:
  static:
